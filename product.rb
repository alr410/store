# Класс продукта, у экземпляров которого есть два поля: цена и количество на складе.
# При создании нового продукта можно передать значения цены и остатка

class Product
  def initialize(price, quantity)
    @name = ''
    @price = price.to_i
    @quantity = quantity.to_i

  end

  # Метод, который позволяет посмотреть цену
  def price
    @price
  end

  # Метод, который позволяет посмотреть название продукта
  def name
    @name
  end

  # абстрактный метод
  def update(options)
    # todo: должен реализовываться детьми
  end

  # абстрактный метод получения информации о товаре
  def info
    # todo: этот метод должен возвращать строку,
    # содержащую всю информацию о товаре, кроме цены и количества оставшихся товаров
  end

  # Метод show, который использует абстрактный метод info и
  # показывает кроме информации ещё и стоимость товара
  def show
    nomenclature = info + " - #{@price} руб. [осталось:  #{@quantity}]"
    return nomenclature
  end

  # Статический метод showcase, который принимает на вход массив продуктов,
  # проходится по ним и выводит каждый из них методом show
  def self.showcase(products)
    products.each_with_index { |product_name, index|
      puts "#{index}: #{product_name.show}"
    }
  end

  # Мметод покупки buy: он проверяет, остался ли товар на складе
  # (@quantity должно быть больше нуля) и если остался — пишет
  # об удачной покупке, уменьшает количество на складе на 1 и возвращает стоимость товара.
  def buy
    if @quantity > 0
      @quantity = @quantity - 1
      puts "\n****************************************************************************************"
      puts "Вы купили товар: #{info}. Удачной покупки!"
      puts "****************************************************************************************"
      price
    else
      puts "\n******************************************************************************"
      puts "К сожалению товар закончился."
      puts "********************************************************************************"
      0
    end

  end
end